<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Circular SVG Button</title>
<style>
  body {
    margin: 0;
    ;
    min-height: 200vh;
  }

  .circle-btn-wrap {
    position: fixed;
    bottom: 18px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    cursor: pointer;
  }

  .circle-btn {
    display: block;
    transition: transform 0.3s ease;
  }

  .circle-btn:hover {
    transform: scale(1.08);
  }

  .circle-ring {
    stroke-dasharray: 314;
    stroke-dashoffset: 314;
    transition: stroke-dashoffset 0.8s ease;
  }

  .circle-btn:hover .circle-ring {
    stroke-dashoffset: 0;
  }
</style>
</head>
<body>

<!-- SVG Circle Button -->
<div class="circle-btn-wrap">
  <svg class="circle-btn" id="circleBtn" width="64" height="64" viewBox="0 0 64 64"
       xmlns="http://www.w3.org/2000/svg" role="button" tabindex="0" aria-label="Toggle Info">
    <defs>
      <linearGradient id="grad" x1="0" x2="1">
        <stop offset="0%" stop-color="#00d4ff"/>
        <stop offset="100%" stop-color="#7b61ff"/>
      </linearGradient>
      <filter id="glow">
        <feGaussianBlur stdDeviation="3.5" result="coloredBlur"/>
        <feMerge>
          <feMergeNode in="coloredBlur"/>
          <feMergeNode in="SourceGraphic"/>
        </feMerge>
      </filter>
    </defs>

    <!-- Outer animated ring -->
    <circle class="circle-ring" cx="32" cy="32" r="30"
            stroke="url(#grad)" stroke-width="3" fill="none"
            stroke-linecap="round" filter="url(#glow)" />

    <!-- Inner soft fill -->
    <circle cx="32" cy="32" r="26" fill="rgba(255,255,255,0.04)" />
  </svg>
</div>

<!-- Hidden info panel for example -->
<div id="infoPanel" style="
  position:fixed;bottom:-200px;left:0;width:100%;
  background:rgba(25,25,25,0.95);color:#fff;
  text-align:center;padding:20px;transition:bottom .4s ease;">
  <p>This is the simplified info panel content â€” fully searchable in HTML.</p>
</div>

<script>
const circleBtn = document.getElementById('circleBtn');
const infoPanel = document.getElementById('infoPanel');

function togglePanel() {
  const open = infoPanel.style.bottom === '70px';
  infoPanel.style.bottom = open ? '-200px' : '70px';
}

circleBtn.addEventListener('click', togglePanel);
circleBtn.addEventListener('keydown', (e)=>{
  if(e.key==='Enter' || e.key===' '){ e.preventDefault(); togglePanel(); }
});
</script>

</body>
</html>
